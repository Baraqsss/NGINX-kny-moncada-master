{
	"info": {
		"_postman_id": "a5e7b8c9-d0e1-4f23-a6b7-c8d9e0f1a2b3",
		"name": "KNY Moncada API",
		"description": "API collection for KNY Moncada application",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Login",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"admin\",\n    \"password\": \"admin123\"\n}"
						},
						"url": {
							"raw": "http://localhost:5000/api/users/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"users",
								"login"
							]
						},
						"description": "Login with admin credentials"
					},
					"response": []
				},
				{
					"name": "Register",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test User\",\n    \"email\": \"test@example.com\",\n    \"username\": \"testuser\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "http://localhost:5000/api/users/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"users",
								"register"
							]
						},
						"description": "Register a new user"
					},
					"response": []
				},
				{
					"name": "Get Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "http://localhost:5000/api/users/me",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"users",
								"me"
							]
						},
						"description": "Get current user profile"
					},
					"response": []
				},
				{
					"name": "Update Profile",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated Name\",\n    \"phone\": \"1234567890\",\n    \"organization\": \"KNY Moncada\"\n}"
						},
						"url": {
							"raw": "http://localhost:5000/api/users/profile",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"users",
								"profile"
							]
						},
						"description": "Update user profile"
					},
					"response": []
				}
			],
			"description": "Authentication endpoints"
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get All Users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "http://localhost:5000/api/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"users"
							]
						},
						"description": "Get all users (admin only)"
					},
					"response": []
				},
				{
					"name": "Get User by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "http://localhost:5000/api/users/:id",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{userId}}",
									"description": "User ID"
								}
							]
						},
						"description": "Get user by ID"
					},
					"response": []
				},
				{
					"name": "Approve User",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "http://localhost:5000/api/users/:id/approve",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"users",
								":id",
								"approve"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{userId}}",
									"description": "User ID"
								}
							]
						},
						"description": "Approve a user (admin only)"
					},
					"response": []
				},
				{
					"name": "Reject User",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "http://localhost:5000/api/users/:id/reject",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"users",
								":id",
								"reject"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{userId}}",
									"description": "User ID"
								}
							]
						},
						"description": "Reject a user (admin only)"
					},
					"response": []
				},
				{
					"name": "Update User Role",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"role\": \"Admin\"\n}"
						},
						"url": {
							"raw": "http://localhost:5000/api/users/:id/role",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"users",
								":id",
								"role"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{userId}}",
									"description": "User ID"
								}
							]
						},
						"description": "Update user role (admin only)"
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "http://localhost:5000/api/users/:id",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{userId}}",
									"description": "User ID"
								}
							]
						},
						"description": "Delete a user (admin only)"
					},
					"response": []
				}
			],
			"description": "User management endpoints"
		},
		{
			"name": "Events",
			"item": [
				{
					"name": "Get All Events",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/api/events",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"events"
							]
						},
						"description": "Get all events"
					},
					"response": []
				},
				{
					"name": "Get Event by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/api/events/:id",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"events",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{eventId}}",
									"description": "Event ID"
								}
							]
						},
						"description": "Get event by ID"
					},
					"response": []
				},
				{
					"name": "Create Event",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Test Event\",\n    \"description\": \"This is a test event\",\n    \"date\": \"2023-12-31\",\n    \"time\": \"18:00\",\n    \"visibility\": \"public\"\n}"
						},
						"url": {
							"raw": "http://localhost:5000/api/events",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"events"
							]
						},
						"description": "Create a new event (admin only)"
					},
					"response": []
				},
				{
					"name": "Update Event",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Updated Event\",\n    \"description\": \"This event has been updated\",\n    \"date\": \"2023-12-31\",\n    \"time\": \"19:00\",\n    \"visibility\": \"members\"\n}"
						},
						"url": {
							"raw": "http://localhost:5000/api/events/:id",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"events",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{eventId}}",
									"description": "Event ID"
								}
							]
						},
						"description": "Update an event (admin only)"
					},
					"response": []
				},
				{
					"name": "Delete Event",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "http://localhost:5000/api/events/:id",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"events",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{eventId}}",
									"description": "Event ID"
								}
							]
						},
						"description": "Delete an event (admin only)"
					},
					"response": []
				},
				{
					"name": "Toggle Interest",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "http://localhost:5000/api/memberships/interested/:id",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"memberships",
								"interested",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{eventId}}",
									"description": "Event ID"
								}
							]
						},
						"description": "Toggle interest in an event"
					},
					"response": []
				},
				{
					"name": "Get Interested Events",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "http://localhost:5000/api/memberships/interested",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"memberships",
								"interested"
							]
						},
						"description": "Get events the user is interested in"
					},
					"response": []
				}
			],
			"description": "Event management endpoints"
		},
		{
			"name": "Announcements",
			"item": [
				{
					"name": "Get All Announcements",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/api/announcements",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"announcements"
							]
						},
						"description": "Get all announcements"
					},
					"response": []
				},
				{
					"name": "Get Announcement by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/api/announcements/:id",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"announcements",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{announcementId}}",
									"description": "Announcement ID"
								}
							]
						},
						"description": "Get announcement by ID"
					},
					"response": []
				},
				{
					"name": "Create Announcement",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Test Announcement\",\n    \"message\": \"This is a test announcement\"\n}"
						},
						"url": {
							"raw": "http://localhost:5000/api/announcements",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"announcements"
							]
						},
						"description": "Create a new announcement (admin only)"
					},
					"response": []
				},
				{
					"name": "Update Announcement",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Updated Announcement\",\n    \"message\": \"This announcement has been updated\"\n}"
						},
						"url": {
							"raw": "http://localhost:5000/api/announcements/:id",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"announcements",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{announcementId}}",
									"description": "Announcement ID"
								}
							]
						},
						"description": "Update an announcement (admin only)"
					},
					"response": []
				},
				{
					"name": "Delete Announcement",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "http://localhost:5000/api/announcements/:id",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"announcements",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{announcementId}}",
									"description": "Announcement ID"
								}
							]
						},
						"description": "Delete an announcement (admin only)"
					},
					"response": []
				}
			],
			"description": "Announcement management endpoints"
		},
		{
			"name": "Donations",
			"item": [
				{
					"name": "Get All Donations",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "http://localhost:5000/api/donations",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"donations"
							]
						},
						"description": "Get all donations (admin only)"
					},
					"response": []
				},
				{
					"name": "Get Donation by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "http://localhost:5000/api/donations/:id",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"donations",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{donationId}}",
									"description": "Donation ID"
								}
							]
						},
						"description": "Get donation by ID (admin only)"
					},
					"response": []
				},
				{
					"name": "Create Donation",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"donorName\": \"Test Donor\",\n    \"email\": \"donor@example.com\",\n    \"amount\": 100,\n    \"paymentMethod\": \"Credit Card\"\n}"
						},
						"url": {
							"raw": "http://localhost:5000/api/donations",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"donations"
							]
						},
						"description": "Create a new donation"
					},
					"response": []
				}
			],
			"description": "Donation management endpoints"
		},
		{
			"name": "Admin",
			"item": [
				{
					"name": "Get Dashboard Stats",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "http://localhost:5000/api/admin/stats",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"admin",
								"stats"
							]
						},
						"description": "Get dashboard statistics (admin only)"
					},
					"response": []
				}
			],
			"description": "Admin endpoints"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Save token from login response",
					"if (pm.response.code === 200 && pm.request.url.toString().includes('/api/users/login')) {",
					"    const responseJson = pm.response.json();",
					"    if (responseJson.token) {",
					"        pm.environment.set('token', responseJson.token);",
					"        pm.environment.set('userId', responseJson._id);",
					"    }",
					"}",
					"",
					"// Save event ID from create event response",
					"if (pm.response.code === 201 && pm.request.url.toString().includes('/api/events') && !pm.request.url.toString().includes('/:id')) {",
					"    const responseJson = pm.response.json();",
					"    if (responseJson._id) {",
					"        pm.environment.set('eventId', responseJson._id);",
					"    }",
					"}",
					"",
					"// Save announcement ID from create announcement response",
					"if (pm.response.code === 201 && pm.request.url.toString().includes('/api/announcements') && !pm.request.url.toString().includes('/:id')) {",
					"    const responseJson = pm.response.json();",
					"    if (responseJson._id) {",
					"        pm.environment.set('announcementId', responseJson._id);",
					"    }",
					"}",
					"",
					"// Save donation ID from create donation response",
					"if (pm.response.code === 201 && pm.request.url.toString().includes('/api/donations') && !pm.request.url.toString().includes('/:id')) {",
					"    const responseJson = pm.response.json();",
					"    if (responseJson._id) {",
					"        pm.environment.set('donationId', responseJson._id);",
					"    }",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "token",
			"value": ""
		},
		{
			"key": "userId",
			"value": ""
		},
		{
			"key": "eventId",
			"value": ""
		},
		{
			"key": "announcementId",
			"value": ""
		},
		{
			"key": "donationId",
			"value": ""
		}
	]
} 